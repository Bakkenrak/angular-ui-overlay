!function(){"use strict";var a=angular.module("uiOverlay",[]);a.directive("uiOverlay",["$timeout",function(a){var b=function(a){var b=a.map(function(a){return{top:a.offsetTop,bottom:a.offsetTop+a.offsetHeight,left:a.offsetLeft,right:a.offsetLeft+a.offsetWidth}});return{top:Math.min.apply(Math,b.map(function(a){return a.top})),bottom:Math.max.apply(Math,b.map(function(a){return a.bottom})),left:Math.min.apply(Math,b.map(function(a){return a.left})),right:Math.max.apply(Math,b.map(function(a){return a.right}))}};return function(c,d,e){if(!e.uiOverlay)throw new Error("Please provide a value or expression for the ui-overlay directive.");c._uiOverlayAttr=e.uiOverlay;for(var h,f=c.$eval(e.uiOverlay),g=[].slice.call(d.children()),i=0;i<g.length;i++){for(var j=g[i],k=0;k<j.attributes.length;k++)if("overlay-container"===j.attributes[k].name){h=angular.element(j),g.splice(i,1);break}if(void 0!==h)break}if(void 0===h)throw new Error("Please provide an element with an overlay-container attribute as a direct child of the ui-overlay element.");var l=[];if(f.children)if(0===f.children.length)l=g;else{var m=d.children();angular.forEach(f.children,function(a){l.push(m[a])})}else l.push(d[0]);var n=function(){var a=b(l);h[0].style.top=a.top+"px",h[0].style.left=a.left+"px",h[0].style.width=a.right-a.left+"px",h[0].style.height=a.bottom-a.top+"px"};a(function(){h.css({position:"absolute",display:f.active?"table":"none"}),f.active&&n(),c.$on("collapseEndGlobal",function(){c.$eval(c._uiOverlayAttr).active&&n()})}),angular.element(window).on("resize",function(){n()}),c.$watch(e.uiOverlay,function(b,c){b&&b.active?a(function(){n(),h[0].style.display=h.children().length>0?"table":"block"}):h[0].style.display="none"})}}])}();